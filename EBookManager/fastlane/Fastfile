# iOS和Android自动化部署配置

default_platform(:ios)

# iOS部署配置
platform :ios do
  desc "构建并上传到TestFlight"
  lane :beta do
    increment_build_number(xcodeproj: "ios/EBookManager.xcodeproj")
    build_app(workspace: "ios/EBookManager.xcworkspace", scheme: "EBookManager")
    upload_to_testflight
  end

  desc "构建并上传到App Store"
  lane :release do
    increment_build_number(xcodeproj: "ios/EBookManager.xcodeproj")
    build_app(workspace: "ios/EBookManager.xcworkspace", scheme: "EBookManager")
    upload_to_app_store
  end
end

# Android部署配置
platform :android do
  desc "构建并上传到Google Play Beta"
  lane :beta do
    gradle(
      task: "clean bundleRelease",
      project_dir: "android/",
      properties: {
        "android.injected.signing.store.file" => ENV["ANDROID_KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["ANDROID_KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASSWORD"],
      }
    )
    upload_to_play_store(track: 'beta')
  end

  desc "构建并上传到Google Play"
  lane :release do
    gradle(
      task: "clean bundleRelease",
      project_dir: "android/",
      properties: {
        "android.injected.signing.store.file" => ENV["ANDROID_KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["ANDROID_KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASSWORD"],
      }
    )
    upload_to_play_store
  end
end